#!/bin/bash

export PJ_ROOT=`pwd`
export PJ_BUILDER=`whoami`
export PJ_SH_CP="cp -avrf"
export PJ_SH_MKDIR="mkdir -p"
export PJ_SH_RMDIR="rm -rf"
export PJ_SH_RM="rm -f"

#******************************************************************************
#** github (ubuntu) **
#******************************************************************************
export PJ_PLATFORM=linux

export PJ_TOOLCHAIN_NAME=
export PJ_TOOLCHAIN_PATH=
export STAGING_DIR=
export PJ_LINUX_INCULDE=

export PJ_OS=$(uname -s | sed -e s/SunOS/solaris/ | tr "[A-Z]" "[a-z]")
export PJ_TARGET=x86
export PJ_HOST=
export PJ_CROSS=
export PJ_BUILD=$(${PJ_CROSS}gcc -dumpmachine)
#export PJ_BUILD=x86_64-ubuntu-linux
#export PJ_BUILD=x86_64-linux-gnu
export PJ_ARCH=x86

export PJ_NAME=github
export PJ_NAME_github=yes
export PJ_BRANCH=v3
export PJ_VERSION=00.00.01

export PJ_MODE="RELEASE"

#******************************************************************************
#** CC_EXT, CPP_EXT, CXX_EXT, LD_EXT **
#******************************************************************************


#******************************************************************************
#** CFLAGS_EXT, CPPFLAGS_EXT, CXXFLAGS_EXT, LDFLAGS_EXT **
#******************************************************************************


#******************************************************************************
#** PJ_PKG_CONFIG_ORG **
#******************************************************************************

#******************************************************************************
#** kernel **
#******************************************************************************

#******************************************************************************
#** sw (libs) **
#******************************************************************************

#** SSL ** 76
export PJ_HAS_OPENSSL=yes
export PJ_OPENSSL_VERSION=openssl-OpenSSL_1_1_1k

#** libuv ** 112
export PJ_HAS_LIBUV=yes

#** XML, SOAP ** 123
export PJ_HAS_MXML=no

#** JSON, INI ** 135
export PJ_HAS_JANSSON=yes
export PJ_HAS_JSONC=yes

#** curl ** 151
export PJ_HAS_CURL=yes

#** mqtt ** 158
export PJ_HAS_MOSQUITTO=yes
export PJ_HAS_LIBWEBSOCKETS=yes

#** dbus ** 166
# DBUS -> EXPAT
export PJ_HAS_DBUS=yes
export PJ_DBUS_SOCKET="/var/run/dbus/system_bus_socket"
export PJ_DBUS_ADDR=""
export PJ_HAS_DBUS_CFG=yes

#** ubus ** 173
export PJ_HAS_LIBUBOX=no

#** tools ** 220
export PJ_HAS_SWCONFIG=no

#** tools (uri) ** 267
export PJ_HAS_URIPARSER=no
export PJ_HAS_LIBYUAREL=no

#** tools (network) **

#** tools (usb) ** 278
export PJ_HAS_LIBUSB=yes

#** tools (utilx9) **
export PJ_HAS_UTILX9=yes

#** tools (beex/mctt) **
# MCTT uses the definication of zware
export PJ_HAS_BEEX=yes

#** tools (hornetx/mqtt) **
export PJ_HAS_HORNETX=yes
export PJ_HAS_HONEYX=yes

#******************************************************************************
#** platform **
#******************************************************************************
export PJ_HAS_PLATFORM=no

#******************************************************************************
#** user **
#******************************************************************************
export PJ_HAS_PYTHON_EX=no

export PJ_HAS_STATIC_LIB=no
export PJ_HAS_SHARE_LIB=yes

#use Personal access tokens
export PJ_WWW_GIT_ROOT="github.com/lankahsu520"
export PJ_WWW_GIT_ROOT_USERNAME=""
export PJ_WWW_GIT_ROOT_PASSWORD=""

#******************************************************************************
#** user/customer **
#******************************************************************************
#** name **
export PJ_HAS_CUSTOMER_NAME="LANKA"

#** Cloud **
export PJ_HAS_ICLOUD=no
export PJ_ICLOUD_BACKUP=no
export PJ_ICLOUD_CERT_LUFFANET=no

#******************************************************************************
#** user/customer (environment) **
#******************************************************************************
export PJ_ADMIN="admin"
export PJ_IFACE="enp0s8"

export PJ_MCTT_IP="229.255.255.250"
export PJ_MCTT_PORT="6288"

export PJ_ICLOUD_HOST="192.168.50.148"
export PJ_ICLOUD_PORT="9000"
export PJ_ICLOUD_SECURITY="0"

#******************************************************************************
#** user/AWS **
#******************************************************************************

#******************************************************************************
#** user/ZigBee **
#******************************************************************************

#******************************************************************************
#** user/Z-Wave **
#******************************************************************************

#******************************************************************************
#** user/Infrared **
#******************************************************************************

#******************************************************************************
#** user/IoT **
#******************************************************************************

#******************************************************************************
#** CONFIG **
#******************************************************************************
export CONFIG_AUTOCONF_H=${PJ_ROOT}/include/autoconf_common.h
export CONFIG_CONFIG=${PJ_ROOT}/include/config_common
export CONFIG_CUSTOMER_DEF_H=${PJ_ROOT}/include/customer_def.h
export CONFIG_CUSTOMER=${PJ_ROOT}/include/config_customer

export CONFIG_MESON=${PJ_ROOT}/include/meson_options.txt

#******************************************************************************
#** install **
#******************************************************************************

#** root **
export PJ_INSTALL=${PJ_ROOT}/install
mkdir -p ${PJ_INSTALL}

export SDK_ROOT_DIR=${PJ_INSTALL}/${PJ_NAME}_${PJ_TOOLCHAIN_NAME}
export SDK_USR_PREFIX=""
export SDK_USR_PREFIX_DIR=""
export HOMEX_ROOT_DIR=${PJ_INSTALL}/${PJ_NAME}_rootfs
export HOMEX_USR_PREFIX=""
export HOMEX_USR_PREFIX_DIR=""

export PJ_IOT_PATH="IoT"
export PJ_SAVE_PATH="/work/IoT"
export PJ_WORK_PATH="/tmp/IoT"

export PJ_INSTALL_TARGET="/work/rootfs"
export PJ_INSTALL_IOT_RELATIVE="$PJ_IOT_PATH"
export PJ_INSTALL_IOT="$PJ_INSTALL_TARGET/$PJ_INSTALL_IOT_RELATIVE"

#. ${PJ_ROOT}/confs/common/install.conf
export SDK_BIN_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}bin
export SDK_ETC_DIR=${SDK_ROOT_DIR}/etc
export SDK_INC_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}include
export SDK_LIB_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}lib
export SDK_OPT_DIR=${SDK_ROOT_DIR}/opt
export SDK_SBIN_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}sbin

export HOMEX_BIN_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}bin
export HOMEX_ETC_DIR=${HOMEX_ROOT_DIR}/etc
export HOMEX_INC_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}include
export HOMEX_LIB_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}lib
export HOMEX_OPT_DIR=${HOMEX_ROOT_DIR}/opt
export HOMEX_SBIN_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}sbin

#******************************************************************************
#** SDK (conf)**
#******************************************************************************
export SDK_CONFIG_AUTOCONF_H=${PJ_ROOT}/include/autoconf_common.h
export SDK_CONFIG_CONFIG=${PJ_ROOT}/include/config_common
export SDK_CONFIG_CUSTOMER_DEF_H=${PJ_ROOT}/include/customer_def.h
export SDK_CONFIG_CUSTOMER=${PJ_ROOT}/include/config_customer

export SDK_CONFIG_DBUS_DEF_H="${PJ_ROOT}/include/dbus_def.h"
export SDK_CONFIG_JSON_DEF_H="${PJ_ROOT}/include/json_def.h"
export SDK_CONFIG_UBUS_DEF_H="${PJ_ROOT}/include/ubus_def.h"
export SDK_CONFIG_QUERY_DEF_H="${PJ_ROOT}/include/query_def.h"

#******************************************************************************
#** CFLAGS &  LDFLAGS**
#******************************************************************************
#. ${PJ_ROOT}/confs/common/xflags.conf

export STRIP=${PJ_CROSS}strip

export PJ_STRIP=${STRIP}

export CFLAGS_COMMON="-g -Wall -O2 -fPIC -I${SDK_INC_DIR}"
export CFLAGS_OPENSSL_INCLUDES="-I$PJ_INSTALL_OPENSSL/include/openssl -I$PJ_INSTALL_OPENSSL/include"
export CFLAGS_CUSTOMER="-D_GNU_SOURCE -include $SDK_CONFIG_DBUS_DEF_H -include $SDK_CONFIG_UBUS_DEF_H -include $SDK_CONFIG_JSON_DEF_H -include $SDK_CONFIG_QUERY_DEF_H -include $SDK_CONFIG_CUSTOMER_DEF_H -include $SDK_CONFIG_AUTOCONF_H"
export CFLAGS="$CFLAGS_COMMON $CFLAGS_EXT"
export CPPFLAGS="$CPPFLAGS_EXT -I${SDK_INC_DIR}"
export CXXFLAGS="$CXXFLAGS_EXT -I${SDK_INC_DIR}"

export LIBS="-ldl -pthread -lm"

export LDFLAGS="${LDFLAGS_EXT} -L${SDK_LIB_DIR}"
if [ ! -z "${PJ_RPATH}" ]; then
export LDFLAGS="${LDFLAGS} -Wl,-rpath,${PJ_RPATH}"
fi


#******************************************************************************
#** common **
#******************************************************************************
#. ${PJ_ROOT}/confs/common/common.conf

#svn.mk
export PJ_BUILDNO=`date "+%s"`
export PJ_REVISION=`git log --oneline 2>/dev/null | cut -d' ' -f1 | head -n1`
if [ -z "$PJ_REVISION" ]; then
export PJ_REVISION=`svn info 2>/dev/null | grep Revision | cut -d' ' -f2`
fi

export PJ_EXPIRATION_DATE="1767225600"

# prompt
PS1="[\[\033[1;32m\]${PJ_NAME}-${PJ_TARGET}-${PJ_MODE}\[\033[0m\]@\h \W]\\$ "


#sudo apt-get install libjansson-dev
#sudo apt-get install libuv1-dev

#sudo apt-get install libdbus-1-dev
#or
#sudo apt-get install libdbus-dev
#	cd /usr/include
#	sudo ln dbus-1.0/dbus/ -s dbus
#	cd /usr/include/dbus
#	sudo cp /usr/lib/x86_64-linux-gnu/dbus-1.0/include/dbus/dbus-arch-deps.h ./
#
#sudo apt-get install libwebsockets-dev
#
#sudo apt-get install libusb-dev
#sudo apt-get install libusb-1.0-0-dev
#
#sudo apt-get install libmosquitto-dev
#sudo apt-get install libjson-c-dev