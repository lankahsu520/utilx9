#!/bin/bash

#******************************************************************************
#** CROSS **
#******************************************************************************
if [ -z "$PJ_HOST" ]; then
export PJ_CROSS=""
else
export PJ_CROSS=${PJ_HOST}-
fi

#export CROSS_COMPILE=${PJ_CROSS}
export TARGET_PREFIX=${PJ_CROSS}

export PJ_AUTHOR="lanka"

# Date and time (GMT): 2028年12月31日Sunday 23:59:59
export PJ_EXPIRATION_DATE="1861919999"

export PJ_OPENSSL_EXECUTABLE=`which openssl`

#******************************************************************************
#** PKG (sysroot) & CUSTOMER **
#******************************************************************************
export CFLAGS_OPENSSL_INCLUDES="-I$PJ_INSTALL_OPENSSL/include/openssl -I$PJ_INSTALL_OPENSSL}/include"
export LDFLAGS_OPENSSL_LIBS="-L${PJ_INSTALL_OPENSSL}/lib -Wl,-rpath,${PJ_INSTALL_OPENSSL}/lib"

export CFLAGS_CUSTOMER=" -include ${SDK_CONFIG_DBUS_DEF_H} -include ${SDK_CONFIG_UBUS_DEF_H} -include ${SDK_CONFIG_JSON_DEF_H} -include ${SDK_CONFIG_QUERY_DEF_H} -include ${SDK_CONFIG_CUSTOMER_DEF_H} -include ${SDK_CONFIG_AUTOCONF_H} -include ${SDK_CONFIG_ZWAVE_DEF_H}"

export PKG_CONFIG_PATH="${PJ_PKG_CONFIG}"

export CFLAGS_COMMON="-I${SDK_INC_DIR}"

if [ "${PJ_HAS_GLIB_SYSROOT}" = "yes" ]; then
export CFLAGS_SYSROOT="`pkg-config --cflags gio-2.0 gio-unix-2.0 glib-2.0`"
else
export CFLAGS_SYSROOT=""
fi

#******************************************************************************
#** CFLAGS &  LDFLAGS **
#******************************************************************************
export AR=${PJ_CROSS}ar
export AS=${PJ_CROSS}as
export CC="${PJ_CROSS}gcc ${CC_EXT}"
export CXX="${PJ_CROSS}g++ ${CXX_EXT}"
#export CPP="${PJ_CROSS}gcc ${CPP_EXT}"
export CPP=
#export CXXCPP="${PJ_CROSS}g++ ${CXX_EXT}"
export CXXCPP=
export LD="${PJ_CROSS}ld ${LD_EXT}"
export LN=ln
export NM="${PJ_CROSS}nm ${NM_EXT}"
export RANLIB="${PJ_CROSS}ranlib ${RANLIB_EXT}"

export OBJCOPY=${PJ_CROSS}objcopy
export OBJDUMP=${PJ_CROSS}objdump
export GDB=${PJ_CROSS}gdb
export NM=${PJ_CROSS}nm
export RANLIB=${PJ_CROSS}ranlib
export READELF=${PJ_CROSS}readelf

export STRIP=${PJ_CROSS}strip

export CFLAGS="${CFLAGS_PREFIX} ${CFLAGS_COMMON} ${CFLAGS_SYSROOT} ${CFLAGS_EXT}"
export CPPFLAGS="${CPPFLAGS_EXT} -I${SDK_INC_DIR}"
export CXXFLAGS="${CXXFLAGS_EXT} -I${SDK_INC_DIR}"

export LIBS=""
export LIBS_CUSTOMER="-ldl -pthread -lm"

export LDFLAGS="${LDFLAGS_EXT} -L${SDK_LIB_DIR}"

#******************************************************************************
#** CFLAGS &  LDFLAGS (PJ_XXX) **
#******************************************************************************
export PJ_AR=${AR}
export PJ_CC=${CC}
export PJ_CXX=${CXX}
export PJ_CPP=${CPP}
export PJ_CXXCPP=${CXXCPP}
export PJ_LD=${LD}
export PJ_NM=${NM}
export PJ_RANLIB=${RANLIB}
export PJ_STRIP=${STRIP}

if [ ! -z "${PJ_INSTALL_RPATH}" ]; then
export LDFLAGS="${LDFLAGS} -Wl,-rpath,${PJ_INSTALL_RPATH}"
fi

#******************************************************************************
#** CONFIGURE **
#******************************************************************************
export CONFIGURE_FLAGS="AR='${PJ_AR}' CC='${PJ_CC}' CXX='${PJ_CXX}' CPP='${PJ_CPP}' CXXCPP='${PJ_CXXCPP}' CFLAGS='${CFLAGS}' LDFLAGS='${LDFLAGS}' CPPFLAGS='${CPPFLAGS}' CXXFLAGS='${CXXFLAGS}' PKG_CONFIG_PATH='${PJ_PKG_CONFIG}' LIBS='${LIBS}'"
export CONFIGURE_FLAGS_CPP_NULL="AR='${PJ_AR}' CC='${PJ_CC}' CXX='${PJ_CXX}' CXXCPP='${PJ_CXXCPP}' CFLAGS='${CFLAGS}' LDFLAGS='${LDFLAGS}' CPPFLAGS='${CPPFLAGS}' CXXFLAGS='${CXXFLAGS}' PKG_CONFIG_PATH='${PJ_PKG_CONFIG}' LIBS='${LIBS}'"

