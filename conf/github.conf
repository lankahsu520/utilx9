#!/bin/bash

export PJ_ROOT=`pwd`
export PJ_BUILDER=`whoami`
export PJ_SH_CP="cp -avrf"
export PJ_SH_MKDIR="mkdir -p"
export PJ_SH_RMDIR="rm -rf"
export PJ_SH_RM="rm -f"

#******************************************************************************
#** github (ubuntu) **
#******************************************************************************
export PJ_PLATFORM=linux

export PJ_TOOLCHAIN_NAME=
export PJ_TOOLCHAIN_PATH=
export STAGING_DIR=
export PJ_SYSROOT="$STAGING_DIR"

export PJ_OS=$(uname -s | sed -e s/SunOS/solaris/ | tr "[A-Z]" "[a-z]")
export PJ_TARGET=x86
export PJ_HOST=
export PJ_CROSS=
export PJ_BUILD=$(${PJ_CROSS}gcc -dumpmachine)
#export PJ_BUILD=x86_64-ubuntu-linux
#export PJ_BUILD=x86_64-linux-gnu
export PJ_ARCH=x86

export PJ_NAME=github
export PJ_BRANCH=v3
export PJ_VERSION=00.00.01

export PJ_MODE="RELEASE"

#******************************************************************************
#** CC_EXT, CPP_EXT, CXX_EXT, LD_EXT **
#******************************************************************************
export CC_EXT=""

export CPP_EXT=""

export CXX_EXT=""

export LD_EXT=""

#******************************************************************************
#** CFLAGS_EXT, CPPFLAGS_EXT, CXXFLAGS_EXT, LDFLAGS_EXT **
#******************************************************************************
export CFLAGS_EXT=""

export CPPFLAGS_EXT=""

export CXXFLAGS_EXT=""

export LDFLAGS_EXT=""

#******************************************************************************
#** PJ_PKG_CONFIG_ORG **
#******************************************************************************
export PJ_PKG_CONFIG_ORG=$(pkg-config --variable pc_path pkg-config)
export PKG_CONFIG_SYSROOT_DIR=""

#******************************************************************************
#** kernel **
#******************************************************************************
export PJ_LINUX_KERNEL_VERSION=linux-2.6.36.x
export PJ_HAS_LINUX_KERNEL=no

#******************************************************************************
#** sw (libs) **
#******************************************************************************
#** XLIBC **
export PJ_HAS_GLIBC=no
export PJ_HAS_ULIBC=no

#** SSL **
export PJ_HAS_OPENSSL=yes
export PJ_OPENSSL_VERSION=openssl-OpenSSL_1_1_1k

export PJ_HAS_MBEDTLS=no

#** zip **
export PJ_HAS_ZLIB=no
export PJ_HAS_BZIP2=no

#** glib **
export PJ_HAS_LIBFFI=no
export PJ_HAS_GLIB=no
export PJ_HAS_GLIB_SYSROOT=yes

export PJ_HAS_ICU=no

#** boost **
export PJ_HAS_BOOST=no
export PJ_HAS_BOOST_CMAKE=no

export PJ_HAS_PROTOBUF=no

#** gdbm **
export PJ_HAS_GDBM=no
export PJ_HAS_CURVE25519=no

export PJ_HAS_SIMCLIST=no

export PJ_HAS_LOG4CPLUS=no

#** Unit testing framework **
export PJ_HAS_BCUNIT=no

#** yasm **
export PJ_HAS_YASM=no

#** libuv **
export PJ_HAS_LIBUV=yes

#** Netlink **
export PJ_HAS_LIBNL_TINY=no

#** busybox **
export PJ_BUSYBOX_VERSION=busybox-1.23.2
export PJ_HAS_BUSYBOX=no

#** XML, SOAP **
export PJ_HAS_MXML=no
export PJ_HAS_LIBXML2=no
export PJ_HAS_LIBROXML=no

export PJ_HAS_EXPAT=no
export PJ_HAS_EXPAT050=no

# for soap
export PJ_HAS_LIBSOAP=no
export PJ_HAS_AXIS2=no
export PJ_HAS_GSOAP=no

#** JSON, INI **
export PJ_HAS_JANSSON=yes
export PJ_HAS_CJSON=no
export PJ_HAS_JSONC=yes
export PJ_HAS_JQ=no

export PJ_HAS_MININI=no

#** config **
export PJ_HAS_LIBCONFIG=no

export PJ_HAS_LIBUUID=no

#** ldns **
export PJ_HAS_LDNS=no

#** curl **
export PJ_HAS_CURL=yes

#** Libical **
export PJ_HAS_LIBICAL=no

#** mqtt **
export PJ_HAS_MOSQUITTO=yes
export PJ_HAS_LIBWEBSOCKETS=yes

#** ncurses & lua **
export PJ_HAS_NCURSES=no
export PJ_HAS_READLINE=no
export PJ_HAS_LUA=no

#** dbus **
# DBUS -> EXPAT
export PJ_HAS_DBUS=yes
export PJ_DBUS_SOCKET="/var/run/dbus/system_bus_socket"
export PJ_DBUS_ADDR=""
export PJ_HAS_DBUS_CFG=yes

#** ubus **
export PJ_HAS_LIBUBOX=no

export PJ_HAS_UBUS=no
export PJ_UBUS_ADDR="/tmp/IoT/ubus.sock"

#** libzwscene **
export PJ_HAS_UDUNITS=no
export PJ_HAS_LIBESMTP=no

#** apache lib **
export PJ_HAS_APR=no
export PJ_HAS_APR_UTIL=no
export PJ_HAS_PCRE=no

export PJ_HAS_AVRO=no

#** ffmpeg **
export PJ_HAS_X264=no
export PJ_HAS_X265=no
# FFMPEG (libavformat) -> X264, X265
export PJ_HAS_FFMPEG=no

#** ustream **
export PJ_HAS_USTREAM=no

#** gstreamer **
export PJ_HAS_GSTREAMER=no
export PJ_HAS_GST_PLUGINS_BASE=no
export PJ_HAS_GST_PLUGINS_GOOD=no
export PJ_HAS_GST_PLUGINS_BAD=no
# LIBAV -> FFMPEG -> X264, X26
export PJ_HAS_GST_LIBAV=no

export PJ_HAS_GST_DEVTOOLS=no

#** stream **
export PJ_HAS_BCTOOLBOX=no
# ORTP -> BCTOOLBOX -> BCUNIT, MBEDTLS
export PJ_HAS_ORTP=no

# KVSWEBRTC-> Curl, Openssl, Log4cplus, libsrtp, libusrsctp
export PJ_HAS_LIBSRTP=no
export PJ_HAS_LIBUSRSCTP=no

export PJ_HAS_LIVE555=no

#** tools **
export PJ_HAS_UCI=no
export PJ_HAS_UBOX=no
export PJ_HAS_SWCONFIG=no

# coreMQTT -> CMock -> Unity
export PJ_HAS_UNITY=no
export PJ_HAS_CMOCK=no

export PJ_HAS_P7ZIP=no
export PJ_HAS_LIBICONV=no

export PJ_HAS_SQLITE=no
export PJ_HAS_PYTHON=no

#** tools (httpd) **
export PJ_HAS_HTTPD=no

export PJ_HAS_FASTCGI=no
export PJ_FASTCGI_PORT="9188"

#** tools (uHTTPd) **
export PJ_HAS_UHTTPD=no

#** tools (SIP) **
export PJ_HAS_SPANDSP=no
export PJ_HAS_SOFIA_SIP=no

export PJ_HAS_SPEEX=no

export PJ_HAS_OSIP=no
export PJ_HAS_EXOSIP=no

export PJ_HAS_SOFSIP_CLI=no

#** tools (baresip) **
export PJ_HAS_LIBRE=no
export PJ_HAS_LIBREM=no
export PJ_HAS_BARESIP=no
export PJ_HAS_BARESIP_WEBRTC=no
export PJ_BARESIP_USER_AGENT=""

#** tools (OpenSIPS) **
export PJ_HAS_OPENSIPS=no

#** tools (FreeSWITCH) **
# FreeSWITCH-> spandsp, sofia-sip, sqlite, speex, ldns, ffmpeg
export PJ_HAS_FREESWITCH=no

#** tools (uri) **
export PJ_HAS_URIPARSER=no
export PJ_HAS_LIBYUAREL=no

#** tools (network) **
export PJ_HAS_DROPBEAR=no
export PJ_HAS_LIBSSH=no
export PJ_HAS_LIPCAP=no
export PJ_HAS_DAQ=no
export PJ_HAS_MDNSRESPONDER=no

#** tools (usb) **
export PJ_HAS_EUDEV=no
export PJ_HAS_LIBUSB=yes
export PJ_HAS_LIBUSB_COMPAT=no
export PJ_HAS_HIDAPI=no

#** tools (BlueZ) **
# BlueZ-> eudev, libxml2, libical
export PJ_HAS_BLUEZ=no

#** tools (ZigBee) **
export PJ_HAS_LIBEZSP=no

#** others **
export PJ_HAS_VALGRIND=no

export PJ_HAS_CATCH2=no

export PJ_HAS_BACKTRACE=no

#** tools (utilx9) **
export PJ_HAS_UTILX9=yes

#** tools (beex/mctt) **
# MCTT uses the definication of zware
export PJ_HAS_BEEX=yes

#** tools (hornetx/mqtt) **
export PJ_HAS_HORNETX=yes
export PJ_HAS_HONEYX=yes

#******************************************************************************
#** platform **
#******************************************************************************
export PJ_HAS_PLATFORM=no

#******************************************************************************
#** user **
#******************************************************************************
export PJ_HAS_PYTHON_EX=no

export PJ_HAS_STATIC_LIB=no
export PJ_HAS_SHARE_LIB=yes

export PJ_HAS_LOGD_CONF=no
export PJ_HAS_UHTTPD_CONF=no
export PJ_HAS_MQTT_CONF=yes

#use Personal access tokens
export PJ_WWW_GIT_ROOT="github.com/lankahsu520"
export PJ_WWW_GIT_ROOT_USERNAME=""
export PJ_WWW_GIT_ROOT_PASSWORD=""

#******************************************************************************
#** user/customer **
#******************************************************************************
#** name **
export PJ_HAS_CUSTOMER_NAME="LANKA"

#** common **
export PJ_HAS_DBUS_HANDLER=yes
export PJ_HAS_DBUS_DEMO=no
export PJ_HAS_FCM_DEMO=no

#** MQTT & MCTT **
export PJ_HAS_MASTER=no
export PJ_HAS_QUEEN_BEE=yes
export PJ_HAS_HONEY_MARKET=yes

#** UART **
export PJ_HAS_URCOMMANDER=yes

#** OTA **
export PJ_HAS_OTA=no

#** USB **
export PJ_HAS_USBHUNTER=yes

#** WEB (FASTCGI) **
export PJ_HAS_FASTCGI=no

#** WEB **
export PJ_HAS_MOD_IOT=no
export PJ_HAS_MOD_LUFFA=no

export PJ_HAS_WWW_COMMON=no
export PJ_WWW_COMMON_GIT_ROOT=${PJ_WWW_GIT_ROOT}
export PJ_WWW_COMMON_GIT_REPOS_MQTT="mqtt-web-3"

#** Cloud **
export PJ_HAS_ICLOUD=no
export PJ_ICLOUD_BACKUP=no
export PJ_ICLOUD_CERT_LUFFANET=no
#export PJ_ICLOUD_CERT_HIPPO=no
#export PJ_ICLOUD_CERT_IBLINK=no

#** Philio **
export PJ_HAS_PHILIO_ENHANCE=no

export PJ_HAS_LIBNVRAM=no
export PJ_HAS_TIMEZONE=no
export PJ_HAS_LOGCAT=no

export PJ_HAS_DBUS123=no
export PJ_HAS_APP=no
export PJ_APP_EVENT_COUNT=200
export PJ_APP_SMTP=no
export PJ_APP_IOS_PUSH=no
export PJ_APP_ANDROID_PUSH=no

export PJ_HAS_PHILIO_SDK_V1=no
export PJ_HAS_PHILIO_SDK_V2=no
export PJ_HAS_PHILIO_SDK_S2=no
export PJ_HAS_PHILIO_SDK_V3=no
export PJ_PHILIO_SDK_ONVIF=no

#** Yokis **
export PJ_HAS_YK_P2P=no
export PJ_HAS_YK_P2P_LED=no
export PJ_HAS_YK_COMMAND=no
export PJ_HAS_YK_DATAB=no
export PJ_HAS_YK_INFO=no
export PJ_HAS_YK_REQUEST=no
export PJ_HAS_YK_SERVER=no
export PJ_HAS_YK_UPDATE=no
export PJ_HAS_YK_SUBNET=no
export PJ_HAS_YK_KMS=no
export PJ_HAS_YK_STANDALONE=no
export PJ_HAS_YK_THERMO=no
export PJ_HAS_YK_WS=no
export PJ_HAS_YK_MQTT=no
export PJ_HAS_YK_UP_FORMATTER=no
export PJ_HAS_YK_LOCALINPUT=no

export PJ_HAS_WWW_YOKIS=no
export PJ_WWW_YOKIS_GIT_ROOT=${PJ_WWW_GIT_ROOT}
export PJ_WWW_YOKIS_GIT_REPOS="yokis-web-3"
export PJ_HAS_MOD_YOKIS=no

export PJ_HAS_WWW_YOKIS_PREBUILT=no

export PJ_HAS_WWW_YOKIS_BACKUP=no
export PJ_WWW_YOKIS_BACKUP_GIT_ROOT=${PJ_WWW_GIT_ROOT}
export PJ_WWW_YOKIS_BACKUP_GIT_REPOS="yokis-web"
export PJ_HAS_MOD_YOKIS_BACKUP=no

#** Urmet **
export PJ_HAS_URMET_MQTT=no
export PJ_FAKE_MAC=""
export PJ_URMET_WS_SSL=no

export PJ_HAS_WWW_URMET=no
export PJ_URMET_WWW_SSL=no
export PJ_WWW_URMET_GIT_ROOT=${PJ_WWW_GIT_ROOT}
export PJ_WWW_URMET_GIT_REPOS_MQTT="mqtt-web-3"

export PJ_HAS_WWW_URMET_PREBUILT=no

export PJ_BARESIP_URMET=""

#******************************************************************************
#** user/customer (environment) **
#******************************************************************************
export PJ_ADMIN="admin"
export PJ_IFACE="enp0s8"
export PJ_BR="br9"
export PJ_TAP="tap0"

export PJ_MCTT_IP="229.255.255.250"
export PJ_MCTT_PORT="6288"

export PJ_MQTT_IP=""
export PJ_MQTT_PORT=""
export PJ_MQTT_USER=""
export PJ_MQTT_PASS=""
export PJ_MQTT_CAFILE="mqtt.ca"
export PJ_MQTT_CERT="mqtt_beex.crt"
export PJ_MQTT_CERT_KEY="mqtt_beex.key"

export PJ_LOGGER="logger"

export PJ_ICLOUD_HOST="192.168.50.148"
export PJ_ICLOUD_PORT="9000"
export PJ_ICLOUD_SECURITY="0"

export PJ_FCM_SERVER="https://fcm.googleapis.com/fcm/send"
export PJ_FCM_AUTHORIZATION_EKY="AAAAfuGE1n8..."

#******************************************************************************
#** user/AWS **
#******************************************************************************
export PJ_HAS_AWS_IOT_DEVICE_SDK_EMBEDDED_C=no

export PJ_HAS_CORE_MQTT=no

export PJ_HAS_AWS_KVSPIC=no

# KVSPRODUCER-> libwebsockets
export PJ_HAS_AWS_KVSPRODUCER=no

# KVSSINK-> Curl, Openssl and Log4cplus
export PJ_HAS_AWS_KVSSINK=no

# KVSWEBRTC-> Curl, Openssl, Log4cplus, libsrtp, libusrsctp
export PJ_HAS_AWS_KVSWEBRTC=no

export PJ_HAS_AWS_KVSMARIO=no

export PJ_HAS_AWS_KVSWEBRTC_JS=no

# AWS account access key
export PJ_AWS_ACCESS_KEY_ID=
# AWS account secret key
export PJ_AWS_SECRET_ACCESS_KEY=
# AWS region
export PJ_AWS_DEFAULT_REGION=ap-northeast-1
#export PJ_AWS_DEFAULT_REGION=us-east-1
#export PJ_AWS_DEFAULT_REGION=eu-west-1
# AWS channel
export PJ_AWS_KVS_CHANNEL=HelloLankaS

#******************************************************************************
#** user/ZigBee **
#******************************************************************************
export PJ_HAS_ZIGBEE_HOST=no
export PJ_HAS_ZBDAEMON=no

#******************************************************************************
#** user/Z-Wave **
#******************************************************************************
export PJ_ZWAVE_FOLDER="ZWave_v2"

export PJ_HAS_ZIPGATEWAY=no
#sds13425-6_z-wave_plus_assigned_manufacturer_ids.xlsx
#0xFFFF _Not defined
export PJ_ZIPGATEWAY_MANUFACTURERID=65535
#0x01
export PJ_ZIPGATEWAY_PRODUCTTYPE=1
#0x01
export PJ_ZIPGATEWAY_PRODUCTID=1

export PJ_HAS_ZWARE=no
export PJ_ZWARE_SHARED=no

export PJ_HAS_ZWECHO=no
export PJ_HAS_ZWDAEMON=no

#******************************************************************************
#** user/Infrared **
#******************************************************************************
export PJ_HAS_IR_DAEMON=yes

#******************************************************************************
#** user/IoT **
#******************************************************************************
export PJ_HAS_USER_IOT=yes

#******************************************************************************
#** CONFIG **
#******************************************************************************
export CONFIG_AUTOCONF_H=${PJ_ROOT}/confs/config/autoconf_common.h
export CONFIG_CONFIG=${PJ_ROOT}/confs/config/config_common
export CONFIG_CUSTOMER_DEF_H=${PJ_ROOT}/include/customer_def.h
export CONFIG_CUSTOMER=${PJ_ROOT}/include/config_customer

export CONFIG_MESON=${PJ_ROOT}/include/meson_options.txt

#******************************************************************************
#** install **
#******************************************************************************
export PJ_MK_ROMFS=${PJ_ROOT}/mk/romfs.mk

export PJ_MK_CUSTOMER=${PJ_ROOT}/mk/customer.mk
export PJ_MK_DEFINE=${PJ_ROOT}/mk/define.mk
export PJ_MK_FUNCTION=${PJ_ROOT}/mk/function.mk
export PJ_MK_KERNEL=${PJ_ROOT}/mk/kernel.mk
export PJ_MK_LIBS=${PJ_ROOT}/mk/libs.mk
export PJ_MK_LIBX=${PJ_ROOT}/mk/libx.mk
export PJ_MK_PLATFORM=${PJ_ROOT}/mk/platform.mk
export PJ_MK_SDK=${PJ_ROOT}/mk/sdk.mk
export PJ_MK_SVN=${PJ_ROOT}/mk/svn.mk
export PJ_MK_USER=${PJ_ROOT}/mk/user.mk

export PJ_MK_USER_LIB=${PJ_ROOT}/user/library.mk
export PJ_MK_USER_LIB_MCTT=${PJ_ROOT}/user/library_mctt.mk
export PJ_MK_USER_LIB_PUB=${PJ_ROOT}/user/library_pub.mk

#** cmake **
export PJ_BUILD_TARGET=build_${PJ_TARGET}
export PJ_CMAKE_CROSS=${PJ_ROOT}/mk/cmake/${PJ_BUILD_TARGET}.cmake

#** meson **
export PJ_MESON_BUILD_ROOT=${PJ_ROOT}/mk/meson_public
export PJ_MESON_CROSS=${PJ_ROOT}/mk/meson_public/${PJ_BUILD_TARGET}.meson
export PJ_MK_MESON=${PJ_ROOT}/mk/meson_public/meson.mk

#** root **
export PJ_INSTALL=${PJ_ROOT}/install
mkdir -p ${PJ_INSTALL}

export SDK_ROOT_DIR=${PJ_INSTALL}/${PJ_NAME}_${PJ_TOOLCHAIN_NAME}
export SDK_USR_PREFIX=""
export SDK_USR_PREFIX_DIR=""
export HOMEX_ROOT_DIR=${PJ_INSTALL}/${PJ_NAME}_rootfs
export HOMEX_USR_PREFIX=""
export HOMEX_USR_PREFIX_DIR=""

export PJ_IOT_PATH="IoT"
export PJ_SAVE_PATH="/work/$PJ_IOT_PATH"
export PJ_WORK_PATH="/tmp/$PJ_IOT_PATH"

export PJ_INSTALL_TARGET="/work/rootfs"
export PJ_INSTALL_IOT_RELATIVE="$PJ_IOT_PATH"
export PJ_INSTALL_IOT="$PJ_INSTALL_TARGET/$PJ_INSTALL_IOT_RELATIVE"

#. ${PJ_ROOT}/confs/common/install.conf
export SDK_BIN_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}bin
export SDK_ETC_DIR=${SDK_ROOT_DIR}/etc
export SDK_INC_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}include
export SDK_LIB_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}lib
export SDK_OPT_DIR=${SDK_ROOT_DIR}/opt
export SDK_SBIN_DIR=${SDK_ROOT_DIR}/${SDK_USR_PREFIX_DIR}sbin

export HOMEX_BIN_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}bin
export HOMEX_ETC_DIR=${HOMEX_ROOT_DIR}/etc
export HOMEX_INC_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}include
export HOMEX_LIB_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}lib
export HOMEX_OPT_DIR=${HOMEX_ROOT_DIR}/opt
export HOMEX_SBIN_DIR=${HOMEX_ROOT_DIR}/${HOMEX_USR_PREFIX_DIR}sbin

#******************************************************************************
#** SDK (conf)**
#******************************************************************************
export SDK_CONFIG_AUTOCONF_H=${PJ_ROOT}/include/autoconf_common.h
export SDK_CONFIG_CONFIG=${PJ_ROOT}/include/config_common
export SDK_CONFIG_CUSTOMER_DEF_H=${PJ_ROOT}/include/customer_def.h
export SDK_CONFIG_CUSTOMER=${PJ_ROOT}/include/config_customer

export SDK_CONFIG_DBUS_DEF_H="${PJ_ROOT}/include/dbus_def.h"
export SDK_CONFIG_JSON_DEF_H="${PJ_ROOT}/include/json_def.h"
export SDK_CONFIG_UBUS_DEF_H="${PJ_ROOT}/include/ubus_def.h"
export SDK_CONFIG_QUERY_DEF_H="${PJ_ROOT}/include/query_def.h"

#******************************************************************************
#** CFLAGS &  LDFLAGS**
#******************************************************************************
#. ${PJ_ROOT}/confs/common/xflags.conf

export STRIP=${PJ_CROSS}strip

export PJ_STRIP=${STRIP}

export CFLAGS_COMMON="-g -Wall -O2 -fPIC -I${SDK_INC_DIR}"
export CFLAGS_OPENSSL_INCLUDES="-I$PJ_INSTALL_OPENSSL/include/openssl -I$PJ_INSTALL_OPENSSL/include"
export CFLAGS_CUSTOMER="-D_GNU_SOURCE -include $SDK_CONFIG_DBUS_DEF_H -include $SDK_CONFIG_UBUS_DEF_H -include $SDK_CONFIG_JSON_DEF_H -include $SDK_CONFIG_QUERY_DEF_H -include $SDK_CONFIG_CUSTOMER_DEF_H -include $SDK_CONFIG_AUTOCONF_H"
export CFLAGS="$CFLAGS_COMMON $CFLAGS_EXT"
export CPPFLAGS="$CPPFLAGS_EXT -I${SDK_INC_DIR}"
export CXXFLAGS="$CXXFLAGS_EXT -I${SDK_INC_DIR}"

export LIBS="-ldl -pthread -lm"

export LDFLAGS="${LDFLAGS_EXT} -L${SDK_LIB_DIR}"
if [ ! -z "${PJ_RPATH}" ]; then
export LDFLAGS="${LDFLAGS} -Wl,-rpath,${PJ_RPATH}"
fi


#******************************************************************************
#** common **
#******************************************************************************
#. ${PJ_ROOT}/confs/common/common.conf

#svn.mk
export PJ_BUILDNO=`date "+%s"`
export PJ_REVISION=`git log --oneline 2>/dev/null | cut -d' ' -f1 | head -n1`
if [ -z "$PJ_REVISION" ]; then
export PJ_REVISION=`svn info 2>/dev/null | grep Revision | cut -d' ' -f2`
fi

export PJ_EXPIRATION_DATE="1767225600"

# prompt
PS1="[\[\033[1;32m\]${PJ_NAME}-${PJ_TARGET}-${PJ_MODE}\[\033[0m\]@\h \W]\\$ "


#sudo apt-get install libjansson-dev
#sudo apt-get install libuv1-dev

#sudo apt-get install libdbus-1-dev
#or
#sudo apt-get install libdbus-dev
#	cd /usr/include
#	sudo ln dbus-1.0/dbus/ -s dbus
#	cd /usr/include/dbus
#	sudo cp /usr/lib/x86_64-linux-gnu/dbus-1.0/include/dbus/dbus-arch-deps.h ./
#
#sudo apt-get install libwebsockets-dev
#
#sudo apt-get install libusb-dev
#sudo apt-get install libusb-1.0-0-dev
#
#sudo apt-get install libmosquitto-dev
#sudo apt-get install libjson-c-dev