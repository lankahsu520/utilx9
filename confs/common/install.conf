#!/bin/bash

#******************************************************************************
#** SDK **
#******************************************************************************
export SDK_BIN_DIR=${SDK_ROOT_DIR}${SDK_USR_PREFIX_DIR}/bin
export SDK_ETC_DIR=${SDK_ROOT_DIR}/etc
export SDK_INC_DIR=${SDK_ROOT_DIR}${SDK_USR_PREFIX_DIR}/include
export SDK_LIB_DIR=${SDK_ROOT_DIR}${SDK_USR_PREFIX_DIR}/lib
export SDK_OPT_DIR=${SDK_ROOT_DIR}/opt
export SDK_PKG_DIR=${SDK_LIB_DIR}/pkgconfig
export SDK_SBIN_DIR=${SDK_ROOT_DIR}${SDK_USR_PREFIX_DIR}/sbin

export SDK_USR_INC_DIR=${SDK_ROOT_DIR}/usr/include
export SDK_USR_BIN_DIR=${SDK_ROOT_DIR}/usr/bin
export SDK_USR_LOCAL_BIN_DIR=${SDK_ROOT_DIR}/usr/local/bin

export SDK_IOT_DIR=${SDK_ROOT_DIR}/${PJ_INSTALL_IOT_RELATIVE}

export SDK_CERT_DIR=${SDK_IOT_DIR}/cert
export SDK_CONF_DIR=${SDK_IOT_DIR}/conf
export SDK_HTTPD_DIR=${SDK_IOT_DIR}/httpd
export SDK_HTTPS_DIR=${SDK_IOT_DIR}/https
export SDK_MODULES_DIR=${SDK_IOT_DIR}/modules
export SDK_WWW_DIR=${SDK_IOT_DIR}/www

#******************************************************************************
#** SDK (conf) **
#******************************************************************************
export SDK_CONFIG_AUTOCONF_H=${SDK_INC_DIR}/autoconf_common.h
export SDK_CONFIG_CONFIG=${SDK_INC_DIR}/config_common
export SDK_CONFIG_CUSTOMER_DEF_H=${SDK_INC_DIR}/customer_def.h
export SDK_CONFIG_CUSTOMER=${SDK_INC_DIR}/config_customer

export SDK_CONFIG_DBUS_DEF_H="${SDK_INC_DIR}/dbus_def.h"
export SDK_CONFIG_JSON_DEF_H="${SDK_INC_DIR}/json_def.h"
export SDK_CONFIG_UBUS_DEF_H="${SDK_INC_DIR}/ubus_def.h"
export SDK_CONFIG_QUERY_DEF_H="${SDK_INC_DIR}/query_def.h"
export SDK_CONFIG_ZWAVE_DEF_H="${SDK_INC_DIR}/zwave_def.h"

#******************************************************************************
#** HOME **
#******************************************************************************
export HOMEX_BIN_DIR=${HOMEX_ROOT_DIR}${HOMEX_USR_PREFIX_DIR}/bin
export HOMEX_ETC_DIR=${HOMEX_ROOT_DIR}/etc
export HOMEX_INC_DIR=${HOMEX_ROOT_DIR}${HOMEX_USR_PREFIX_DIR}/include
export HOMEX_LIB_DIR=${HOMEX_ROOT_DIR}${HOMEX_USR_PREFIX_DIR}/lib
export HOMEX_OPT_DIR=${HOMEX_ROOT_DIR}/opt
export HOMEX_SBIN_DIR=${HOMEX_ROOT_DIR}${HOMEX_USR_PREFIX_DIR}/sbin

export HOMEX_USR_BIN_DIR=${HOMEX_ROOT_DIR}/usr/bin
export HOMEX_USR_LOCAL_BIN_DIR=${HOMEX_ROOT_DIR}/usr/local/bin

export HOMEX_IOT_DIR=${HOMEX_ROOT_DIR}/${PJ_INSTALL_IOT_RELATIVE}

export HOMEX_CERT_DIR=${HOMEX_IOT_DIR}/cert
export HOMEX_CONF_DIR=${HOMEX_IOT_DIR}/conf
export HOMEX_HTTPD_DIR=${HOMEX_IOT_DIR}/httpd
export HOMEX_HTTPS_DIR=${HOMEX_IOT_DIR}/https
export HOMEX_MODULES_DIR=${HOMEX_IOT_DIR}/modules
export HOMEX_WWW_DIR=${HOMEX_IOT_DIR}/www

#******************************************************************************
#** INSTALL **
#******************************************************************************
# lib, include
if [ -z "${PJ_INSTALL_TARGET}" ]; then
export PJ_INSTALL_RPATH=
else
export PJ_INSTALL_RPATH=`realpath -m ${PJ_INSTALL_TARGET}${HOMEX_USR_PREFIX_DIR}/lib`
fi
if [ -z "${PJ_PKG_CONFIG_ORG}" ]; then
export PJ_PKG_CONFIG="${SDK_LIB_DIR}/pkgconfig"
else
export PJ_PKG_CONFIG="${SDK_LIB_DIR}/pkgconfig:${PJ_PKG_CONFIG_ORG}"
fi
#mkdir -p ${SDK_PKG_DIR}

#******************************************************************************
#** INSTALL (special) **
#******************************************************************************
#** XLIBC **
export PJ_INSTALL_GLIBC=${PJ_INSTALL}/glibc
export PJ_INSTALL_ULIBC=${PJ_INSTALL}/ulibc

#** openssl **
export PJ_INSTALL_OPENSSL=$SDK_ROOT_DIR

#** glib **
export PJ_INSTALL_LIBFFI=$SDK_ROOT_DIR
export PJ_INSTALL_ZLIB=$SDK_ROOT_DIR
export PJ_INSTALL_GLIB=$SDK_ROOT_DIR

#** gdbm **
export PJ_INSTALL_GDBM=$SDK_ROOT_DIR

#** Netlink **

#** XML, SOAP **
export PJ_INSTALL_MXML=$SDK_ROOT_DIR
export PJ_INSTALL_LIBXML2=$SDK_ROOT_DIR
export PJ_INSTALL_LIBROXML=$SDK_ROOT_DIR

export PJ_INSTALL_EXPAT=$SDK_ROOT_DIR

# for soap
export PJ_INSTALL_LIBSOAP=$SDK_ROOT_DIR
export PJ_INSTALL_GSOAP=$SDK_ROOT_DIR
export PJ_INSTALL_AXIS2=$SDK_ROOT_DIR

#** JSON, INI **

#** config **
# for libconfig
export PJ_INSTALL_LIBCONFIG=$SDK_ROOT_DIR
# for libuuid
export PJ_INSTALL_LIBUUID=$SDK_ROOT_DIR
# for mosquitto
export PJ_INSTALL_MOSQUITTO=$SDK_ROOT_DIR
# for LIBWEBSOCKETS
export PJ_INSTALL_LIBWEBSOCKETS=$SDK_ROOT_DIR

#** dbus **

#** libzwscene **

#** httpd **
# for udunits, apr-util
# for apr-util
export PJ_INSTALL_APR=$SDK_ROOT_DIR
export PJ_INSTALL_APR_UTIL=$SDK_ROOT_DIR
# for pcre
export PJ_INSTALL_PCRE=$SDK_ROOT_DIR
export PJ_INSTALL_HTTPD=$SDK_ROOT_DIR

#** tools **
export PJ_INSTALL_LUA=$SDK_ROOT_DIR
if [ "${PJ_HAS_LUA}" = "yes" ]; then
export PJ_BUILD_LUA="LUAPATH=${SDK_LIB_DIR}"
else
export PJ_BUILD_LUA="BUILD_LUA=off"
fi

#** tools (uri) **

#** tools (network) **
export PJ_INSTALL_CURL=$SDK_ROOT_DIR
export PJ_INSTALL_SSH=$SDK_ROOT_DIR
# for live555, but curl can't use
#export DESTDIR=$SDK_ROOT_DIR

#** tools (usb) **

#** others **

#******************************************************************************
#** ZWave **
#******************************************************************************
export PJ_INSTALL_S2=${PJ_INSTALL}/${PJ_NAME}_s2

# for libzwscene
export PJ_INSTALL_UDUNITS=$SDK_ROOT_DIR
export PJ_INSTALL_LIBESMTP=$SDK_ROOT_DIR
export PJ_INSTALL_AVRO=$SDK_ROOT_DIR

export PJ_ZWAVE_OPT=opt

export PJ_INSTALL_ZWAVE=$SDK_ROOT_DIR
export PJ_INSTALL_ZWAVE_OPT=$SDK_IOT_DIR

export PJ_INSTALL_HCAPI=$PJ_INSTALL_ZWAVE
export PJ_INSTALL_ZIPGATEWAY=$PJ_INSTALL_ZWAVE
export PJ_INSTALL_LIBZWSCENE=$PJ_INSTALL_ZWAVE
export PJ_INSTALL_ZWPORTALD=$PJ_INSTALL_ZWAVE
