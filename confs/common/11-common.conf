#!/bin/bash

set -x

if [ "${PJ_TOOLCHAIN_DIR}" != "" ]; then
	PATH=$(echo $PATH | sed -r -e "s,$PJ_TOOLCHAIN_DIR[^:]*:,,g")
	PATH=$PJ_TOOLCHAIN_DIR:$PATH
fi

if [ -z "${PJ_MODE}" ]; then
	export PJ_MODE="RELEASE"
fi

# prompt
if [ -z "$VIRTUAL_ENV" ]; then
PS1="[\[\033[1;32m\]${PJ_NAME}-${PJ_TARGET}-${PJ_MODE}\[\033[0m\]@\h \W]\\$ "
fi

set +x
set | grep ^PJ_
set | grep ^CFLAGS_
set | grep ^LDFLAGS_
set | grep ^CONFIG_

alias cd-root="cd $PJ_ROOT_DIR"
alias cd-root-sdk="cd $SDK_ROOT_DIR"
alias cd-root-home="cd $HOMEX_ROOT_DIR"

alias cd-confs="cd $PJ_CONFS_DIR"
alias cd-include="cd $PJ_INCLUDE_DIR/"
alias cd-libs="cd $PJ_LIBS_DIR"
alias cd-mk="cd $PJ_MK_DIR"

alias cd-user="cd $PJ_USR_DIR"
alias cd-common="cd $PJ_COMMON_DIR"
alias cd-customer="cd $PJ_CUSTOMER_DIR"
alias cd-examples="cd $PJ_EXAMPLES_DIR"
alias cd-iot="cd $PJ_IOT_FOLDER"
alias cd-kernel="cd $PJ_KERNEL_DIR"
alias cd-npm="cd $PJ_NPM_DIR"
alias cd-platform="cd $PJ_PLATFORM_DIR"
alias cd-python="cd $PJ_PYTHON_DIR"
alias cd-vendor="cd $PJ_VENDOR_DIR"

alias cd-target="cd $PJ_INSTALL_TARGET"
alias cd-chip="cd $PJ_MATTERX_CHIP_ROOT"

alias ll-root-sdk="(ll $SDK_ROOT_DIR)"
alias ll-root-home="(ll $HOMEX_ROOT_DIR/builds/build-$PJ_YOCYO_TARGET/tmp/deploy/images/$PJ_YOCYO_MACHINE)"

alias export-path-sdk-bin="do_command_fn \"export PATH=$SDK_BIN_DIR:$PATH\""

function make-target-install()
{
	(cd-root; make; make romfs; make target_install;)
}

function make-app-rebuild()
{
	(rm .all; make install; make romfs;)
}

function make-app-install()
{
	make-app-rebuild
	make-target-install
}
